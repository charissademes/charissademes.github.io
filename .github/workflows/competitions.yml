name: fetch-competitions-for-charissa-de-mes

on:
  schedule:
    - cron: '0 2 * * *'  # Runs daily at 2 AM UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch-competitions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install axios
        run: npm install axios

      - name: Fetch competitions and save to file
        run: |
          node <<'EOF'
          const fs = require('fs');
          const axios = require('axios');

          async function fetchCompetitions() {
            const filterName = 'Charissa de Mes';
            const matchingCompetitions = [];

            try {
              const res = await axios.get('https://inschrijven.schaatsen.nl/api/competitions');
              const competitions = res.data;

              for (const comp of competitions) {
                try {
                  const competitionDetailRes = await axios.get('https://inschrijven.schaatsen.nl/api/competitions/' + comp.id);
                  const competition = competitionDetailRes.data;

                  try {
                    const competitorsRes = await axios.get('https://inschrijven.schaatsen.nl/api/competitions/' + comp.id + '/competitors');
                    const competitors = competitorsRes.data;

                    let found = false;

                    for (const competitor of competitors) {
                      if (Array.isArray(competitor.competitors)) {
                        for (const subCompetitor of competitor.competitors) {
                          const fullName = subCompetitor?.competitor?.fullName;
                          if (fullName && fullName.toLowerCase() === filterName.toLowerCase()) {
                            const competitionUrl = `https://inschrijven.schaatsen.nl/#/wedstrijd/${comp.id}/informatie`;
                            matchingCompetitions.push({
                              name: competition.name,
                              date: new Date(competition.starts).toISOString().split('T')[0],
                              time: new Date(competition.starts).toISOString().split('T')[1].slice(0,5),
                              city: competition.venue?.address?.city || '',
                              url: competitionUrl
                            });
                            found = true;
                            break;
                          }
                        }
                      }
                      if (found) break;
                    }

                    if (!found) {
                      console.log(`No match for competition: ${competition.name}`);
                    }
                    
                    if (found) {
                      console.log(`Match for competition: ${competition.name}`);
                    }

                  } catch (err) {
                    console.error('Failed to fetch competitors for competition ' + comp.id + ':', err.message);
                  }

                  await new Promise(r => setTimeout(r, 200)); // small delay
                } catch (err) {
                  console.error('Failed to fetch competition detail for ' + comp.id + ':', err.message);
                }
              }

              fs.mkdirSync('./data', { recursive: true });
              fs.writeFileSync('./data/competitions.json', JSON.stringify(matchingCompetitions, null, 2));
              console.log('Matching competitions saved to data/competitions.json');
            } catch (err) {
              console.error('Error fetching competitions list:', err.message);
              process.exit(1);
            }
          }

          fetchCompetitions();
          EOF

      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add data/competitions.json
          git commit -m "Update competitions.json" || echo "No changes to commit"
          git push origin HEAD
